C51 COMPILER V9.01   LCDHZ12864                                                            02/17/2014 16:00:49 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCDHZ12864
OBJECT MODULE PLACED IN lcdhz12864.OBJ
COMPILER INVOKED BY: d:\Keil4\C51\BIN\C51.EXE lcdhz12864.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "lcdhz12864.h"
   2          #include "useful.h"
   3          bit dispFlag=1;
   4          void Check_Busy()
   5          {  
   6   1              if(dispFlag==0){
   7   2                      return;
   8   2              }
   9   1          RS=0;
  10   1          RW=1;
  11   1          E=1;
  12   1          DataPort=0xff;
  13   1          while((DataPort&0x80)==0x80);
  14   1          E=0;
  15   1      }
  16          
  17          void Write_Cmd(unsigned char Cmd)
  18          {
  19   1              if(dispFlag==0){
  20   2                      return;
  21   2              }
  22   1              Check_Busy();
  23   1              RS=0;
  24   1              RW=0;
  25   1              E=1;
  26   1              DataPort=Cmd;
  27   1              delayUs(5);
  28   1              E=0;
  29   1              delayUs(5);
  30   1      }
  31          
  32          void Write_Data(unsigned char Data)
  33          {
  34   1              if(dispFlag==0){
  35   2                      return;
  36   2              }
  37   1              Check_Busy();
  38   1              RS=1;
  39   1              RW=0;
  40   1              E=1;
  41   1              DataPort=Data;
  42   1              delayUs(5);
  43   1              E=0;
  44   1              delayUs(5);
  45   1      }
  46          
  47          
  48                  
  49          
  50          void LCD_PutString(unsigned char x,unsigned char y,unsigned char  *s)
  51          { 
  52   1              if(dispFlag==0){
  53   2                      return;
  54   2              }
  55   1       switch(y)
C51 COMPILER V9.01   LCDHZ12864                                                            02/17/2014 16:00:49 PAGE 2   

  56   1           {
  57   2                case 1: Write_Cmd(0x80+x);break;
  58   2                case 2: Write_Cmd(0x90+x);break;
  59   2                case 3: Write_Cmd(0x88+x);break;
  60   2                case 4: Write_Cmd(0x98+x);break;
  61   2            default:break;
  62   2               }
  63   1       while(*s>0)
  64   1         { 
  65   2            Write_Data(*s);
  66   2            s++;
  67   2            delayUs(50);
  68   2         }
  69   1      }
  70          void LCD_Init(){
  71   1              if(dispFlag==0){
  72   2                      return;
  73   2              }
  74   1              //12864 ≥ı ºªØ 
  75   1              delayMs(40);           //¥Û”⁄40MSµƒ—” ±≥Ã–Ú
  76   1              PSB=1;                 //…Ë÷√Œ™8BIT≤¢ø⁄π§◊˜ƒ£ Ω
  77   1              delayMs(1);            //—” ±
  78   1              RES=0;                 //∏¥Œª
  79   1              delayMs(1);            //—” ±
  80   1              RES=1;                 //∏¥Œª÷√∏ﬂ
  81   1              delayMs(10);
  82   1              Write_Cmd(0x30);       //—°‘Òª˘±æ÷∏¡ÓºØ
  83   1              delayUs(50);         //—” ±¥Û”⁄100us
  84   1              Write_Cmd(0x30);       //—°‘Ò8bit ˝æ›¡˜
  85   1              delayUs(20);         //—” ±¥Û”⁄37us
  86   1              Write_Cmd(0x0c);       //ø™œ‘ æ(Œﬁ”Œ±Í°¢≤ª∑¥∞◊)
  87   1              delayUs(50);         //—” ±¥Û”⁄100us
  88   1              Write_Cmd(0x01);       //«Â≥˝œ‘ æ£¨≤¢«“…Ë∂®µÿ÷∑÷∏’ÎŒ™00H
  89   1              delayMs(15);           //—” ±¥Û”⁄10ms
  90   1              Write_Cmd(0x06);       //÷∏∂®‘⁄◊ ¡œµƒ∂¡»°º∞–¥»Î ±£¨…Ë∂®”Œ±Íµƒ“∆∂Ø∑ΩœÚº∞÷∏∂®œ‘ æµƒ“∆Œª£¨π‚±Í¥””“œÚ◊Ûº”1Œ
             -ª“∆∂Ø
  91   1              delayUs(50);         //—” ±¥Û”⁄100us
  92   1      
  93   1      }
  94          void LCD_PutChar(unsigned char x,unsigned char y,unsigned char c)
  95          { 
  96   1              if(dispFlag==0){
  97   2                      return;
  98   2              }
  99   1              switch(y)
 100   1           {
 101   2                case 1: Write_Cmd(0x80+x);break;
 102   2                case 2: Write_Cmd(0x90+x);break;
 103   2                case 3: Write_Cmd(0x88+x);break;
 104   2                case 4: Write_Cmd(0x98+x);break;
 105   2            default:break;
 106   2               } 
 107   1            Write_Data(c);
 108   1          
 109   1            delayUs(50);
 110   1       
 111   1      }
 112          uchar oldUnderlineX=0,oldUnderlineY=0;
 113          /*
 114          void resetUnderline(){
 115                  oldUnderlineX=0;
 116                  oldUnderlineY=0;
C51 COMPILER V9.01   LCDHZ12864                                                            02/17/2014 16:00:49 PAGE 3   

 117          } */
 118          
 119          void DisplayUnderline(unsigned char cx,unsigned char cy,bit display)  // µº  ‰≥ˆ∏ˆ…œ»˝Ω«
 120          {
 121   1              if(dispFlag==0){
 122   2                      return;
 123   2              }       
 124   1              if(display==0){
 125   2              //≤¡»•œ¬ªÆœﬂ
 126   2              }
 127   1              if(oldUnderlineX!=0||oldUnderlineY!=0){ 
 128   2                      switch(oldUnderlineY)
 129   2                      {
 130   3                              case 1: Write_Cmd(0x80+oldUnderlineX);break;
 131   3                              case 2: Write_Cmd(0x90+oldUnderlineX);break;
 132   3                              case 3: Write_Cmd(0x88+oldUnderlineX);break;
 133   3                              case 4: Write_Cmd(0x98+oldUnderlineX);break;
 134   3                              default:break;
 135   3                      } 
 136   2                      Write_Data(' ');//
 137   2              }
 138   1              oldUnderlineX=cx;
 139   1              oldUnderlineY=cy;
 140   1              switch(cy)
 141   1              {
 142   2                              case 1: Write_Cmd(0x80+cx);break;
 143   2                              case 2: Write_Cmd(0x90+cx);break;
 144   2                              case 3: Write_Cmd(0x88+cx);break;
 145   2                              case 4: Write_Cmd(0x98+cx);break;
 146   2                              default:break;
 147   2              }
 148   1              Write_Data(30);//30 «∏ˆ…œ»˝Ω«∑˚∫≈
 149   1               
 150   1      } 
 151          void LCD_PutPosition(unsigned char x,unsigned char y)
 152          { 
 153   1              if(dispFlag==0){
 154   2                      return;
 155   2              }
 156   1              DisplayUnderline(x,y+1,1);      
 157   1      }
 158          void ClrScreen()
 159          { 
 160   1              if(dispFlag==0){
 161   2                      return;
 162   2              }
 163   1              Write_Cmd(0x01);
 164   1              delayMs(15);
 165   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    476    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
